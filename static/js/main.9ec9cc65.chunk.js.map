{"version":3,"sources":["context/wallet-modal-context.js","utils/wallet/Connectors.js","hooks/useInactiveListener.js","assets/images/metamask.svg","assets/images/walletconnect.svg","assets/images/portis.svg","assets/images/torus.svg","components/WalletModal.jsx","hooks/useEagerConnect.js","components/layout/Navbar.jsx","assets/images/canvas.jpg","assets/images/blogging.png","assets/images/nft.jpg","routes/Home.jsx","App.js","index.js"],"names":["WalletModalContext","createContext","WalletModalProvider","children","useState","walletOverlayActive","setWalletOverlayActive","Provider","value","useWalletModalValue","useContext","RPC_URLS","1","process","RPC_URL_1","4","RPC_URL_4","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","qrcode","portis","PortisConnector","dAppId","PORTIS_DAPP_ID","networks","torus","TorusConnector","chainId","ConnectorNames","WalletLogos","MetaMaskLogo","WalletConnectLogo","PortisLogo","TorusLogo","connectorsByName","getErrorMessage","error","NoEthereumProviderError","UnsupportedChainIdError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","UserRejectedRequestErrorFrame","console","WalletModal","context","useWeb3React","connector","library","account","activate","deactivate","active","React","activatingConnector","setActivatingConnector","useEffect","undefined","triedEager","tried","setTried","isAuthorized","then","catch","useEagerConnect","suppress","ethereum","window","on","handleConnect","log","handleChainChanged","handleAccountsChanged","accounts","length","handleNetworkChanged","networkId","removeListener","useInactiveListener","className","onClick","size","Object","keys","map","name","currentConnector","activating","connected","disabled","src","alt","getSigner","signMessage","signature","alert","message","close","changeNetwork","getLibrary","provider","Web3Provider","pollingInterval","Navbar","to","Home","CanvasPic","BloggingPic","NFTPic","App","ReactDOM","render","document","getElementById"],"mappings":"wSAEaA,EAAqBC,0BACrBC,EAAsB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACKC,oBAAS,GADd,mBAC1CC,EAD0C,KACrBC,EADqB,KAGjD,OACI,cAACN,EAAmBO,SAApB,CAA6BC,MAAO,CAAEH,sBAAqBC,0BAA3D,SACKH,KAKAM,EAAsB,kBAAMC,qBAAWV,I,gBCR9CW,EAAW,CACbC,EAAGC,mIAAYC,UACfC,EAAGF,mIAAYG,WAGNC,EAAW,IAAIC,IAAkB,CAAEC,kBAAmB,CAAC,EAAG,EAAG,EAAG,EAAG,MAEnEC,EAAgB,IAAIC,IAAuB,CACpDC,IAAK,CAAEV,EAAGD,EAAS,IACnBY,QAAQ,IAGCC,EAAS,IAAIC,IAAgB,CAAEC,OAAQb,mIAAYc,eAAgBC,SAAU,CAAC,EAAG,OAEjFC,EAAQ,IAAIC,IAAe,CAAEC,QAAS,ICd5C,I,ECLQ,MAA0B,qCCA1B,MAA0B,0CCA1B,MAA0B,mCCA1B,MAA0B,kCCuBnCC,EACQ,WADRA,EAEa,gBAFbA,EAGM,SAHNA,EAIK,QAGLC,EAAc,CAChB,SAAYC,EACZ,cAAiBC,EACjB,OAAUC,EACV,MAASC,GAGPC,GAAgB,mBACjBN,EAA0Bf,GADT,cAEjBe,EAA+BZ,GAFd,cAGjBY,EAAwBR,GAHP,cAIjBQ,EAAuBH,GAJN,GAOtB,SAASU,EAAgBC,GACrB,OAAIA,aAAiBC,IACV,8GACAD,aAAiBE,IACjB,8CAEPF,aAAiBG,KACjBH,aAAiBI,KACjBJ,aAAiBK,IAEV,kEAEPC,QAAQN,MAAMA,GACP,kEAIR,IAAMO,EAAc,WACvB,IAAMC,EAAUC,cAEZC,EAQAF,EARAE,UACAC,EAOAH,EAPAG,QACApB,EAMAiB,EANAjB,QACAqB,EAKAJ,EALAI,QACAC,EAIAL,EAJAK,SACAC,EAGAN,EAHAM,WACAC,EAEAP,EAFAO,OACAf,EACAQ,EADAR,MAVyB,EAayBgB,IAAMpD,WAb/B,mBAatBqD,EAbsB,KAaDC,EAbC,KAc7BF,IAAMG,WAAU,WACRF,GAAuBA,IAAwBP,GAC/CQ,OAAuBE,KAE5B,CAACH,EAAqBP,IAEzB,IAAMW,EC5EH,WAA4B,IAAD,EACDZ,cAArBI,EADsB,EACtBA,SAAUE,EADY,EACZA,OADY,EAGJnD,oBAAS,GAHL,mBAGvB0D,EAHuB,KAGhBC,EAHgB,KAuB9B,OAlBAJ,qBAAU,WACR1C,EAAS+C,eAAeC,MAAK,SAACD,GACxBA,EACFX,EAASpC,OAAU2C,GAAW,GAAMM,OAAM,WACxCH,GAAS,MAGXA,GAAS,SAKfJ,qBAAU,YACHG,GAASP,GACZQ,GAAS,KAEV,CAACD,EAAOP,IAEJO,EDqDYK,IL5EY,WAAuB,IAAtBC,EAAqB,0DACnBnB,cAA5BM,EAD+C,EAC/CA,OAAQf,EADuC,EACvCA,MAAOa,EADgC,EAChCA,SAEvBM,qBAAU,WAAO,IACPU,EAAaC,OAAbD,SACR,GAAIA,GAAYA,EAASE,KAAOhB,IAAWf,IAAU4B,EAAU,CAC7D,IAAMI,EAAgB,WACpB1B,QAAQ2B,IAAI,4BACZpB,EAASpC,IAELyD,EAAqB,SAAC3C,GAC1Be,QAAQ2B,IAAI,6CAA8C1C,GAC1DsB,EAASpC,IAEL0D,EAAwB,SAACC,GAC7B9B,QAAQ2B,IAAI,gDAAiDG,GACzDA,EAASC,OAAS,GACpBxB,EAASpC,IAGP6D,EAAuB,SAACC,GAC5BjC,QAAQ2B,IAAI,+CAAgDM,GAC5D1B,EAASpC,IAQX,OALAoD,EAASE,GAAG,UAAWC,GACvBH,EAASE,GAAG,eAAgBG,GAC5BL,EAASE,GAAG,kBAAmBI,GAC/BN,EAASE,GAAG,iBAAkBO,GAEvB,WACDT,EAASW,iBACXX,EAASW,eAAe,UAAWR,GACnCH,EAASW,eAAe,eAAgBN,GACxCL,EAASW,eAAe,kBAAmBL,GAC3CN,EAASW,eAAe,iBAAkBF,QAI/C,CAACvB,EAAQf,EAAO4B,EAAUf,IKuC3B4B,EAAqBpB,KAAgBJ,GAtBR,MAwB2BhD,IAAhDJ,EAxBqB,EAwBrBA,oBAAqBC,EAxBA,EAwBAA,uBAE7B,OACI,qBAAK4E,UAAU,wBAAf,SAEA,sBAAKA,UAAU,yBAAf,UAEA,wBACIA,UAAU,4BACVC,QAAS,kBAAQ7E,GAAwBD,IAF7C,SAGC,cAAC,IAAD,CAAgB+E,KAAM,OACnB,qBAAKF,UAAU,sBAAf,SACI,qBAAKA,UAAU,qBAAf,8BAEJ,uBACA,qBAAKA,UAAU,iCAAf,SACKG,OAAOC,KAAKhD,GAAkBiD,KAAI,SAACC,GAChC,IAAMC,EAAmBnD,EAAiBkD,GACpCE,EAAaD,IAAqBhC,EAClCkC,EAAYF,IAAqBvC,EACjC0C,GACD/B,KACCJ,GACFkC,KACEnD,EAEN,OACI,yBACI0C,UAAU,uBACVU,SAAUA,EAEVT,QAAS,WACLzB,EAAuB+B,GACvBpC,EAASf,EAAiBkD,KANlC,UASI,sBAAKN,UAAU,8BAAf,UACKQ,EACAC,KAEJ,qBAAKT,UAAU,oBAAoBW,IAAK5D,EAAYuD,GAAOM,IAAKN,IAChE,sBAAMN,UAAU,mBAAhB,SAAoCM,MAXhCA,QAgBrB,iCACMjC,GAAUf,IACR,wBACI2C,QAAS,WACL7B,KAFR,0BASDd,GACC,6BACKD,EAAgBC,QAK7B,mCACQW,IAAWC,IACX,wBACI+B,QAAS,WACLhC,EACK4C,UAAU3C,GACV4C,YAAY,yBACZ/B,MAAK,SAACgC,GACH3B,OAAO4B,MAAP,sBAA4BD,OAE/B/B,OAAM,SAAC1B,GACJ8B,OAAO4B,MACH,YACK1D,GAASA,EAAM2D,QAAf,cACY3D,EAAM2D,SACb,SAb9B,0BAqBHjD,IACGZ,EAAiBN,IACjB,wBACImD,QAAS,WACLjC,EAAUkD,SAFlB,wCAQHlD,IAAcZ,EAAiBN,IAC5B,0CACiB4B,IAAZ7B,GACG,wBACIoD,QAAS,WACLjC,EAAUmD,cACM,IAAZtE,EAAgB,IAAM,IAHlC,6BAUJ,wBACIoD,QAAS,WACLjC,EAAUkD,SAFlB,oCASPlD,IAAcZ,EAAiBN,IAC5B,wBACImD,QAAS,WACLjC,EAAUkD,SAFlB,yCErMpB,SAASE,EAAWC,GAChB,IAAMpD,EAAU,IAAIqD,IAAaD,GAEjC,OADApD,EAAQsD,gBAAkB,KACnBtD,EAGJ,IAAMuD,EAAS,WAAO,IAAD,EAEpBjG,IADIJ,EADgB,EAChBA,oBAAqBC,EADL,EACKA,uBAG7B,OACI,eAAC,IAAD,WACI,qBAAK4E,UAAU,kBAAf,SACI,gCACI,cAAC,IAAD,CAAMA,UAAU,UAAUyB,GAAG,IAA7B,6BAGA,sBAAKzB,UAAU,aAAf,UACI,cAAC,IAAD,CAAMA,UAAU,UAAUyB,GAAG,IAA7B,qBAGA,cAAC,IAAD,CAAMzB,UAAU,UAAUyB,GAAG,IAA7B,sBAGA,cAAC,IAAD,CAAMzB,UAAU,UAAUyB,GAAG,IAA7B,0BAIJ,wBACIzB,UAAU,sBACVC,QAAS,kBACL7E,GAAwBD,IAHhC,iCAUPA,GACG,cAAC,IAAD,CAAmBiG,WAAYA,EAA/B,SACI,cAAC,EAAD,UChDL,MAA0B,mCCA1B,MAA0B,qCCA1B,MAA0B,gCCS5BM,EAAO,WAChB,OACI,sBAAK1B,UAAU,OAAf,UACI,cAAC,EAAD,IACA,sBAAKA,UAAU,cAAf,UACA,qBAAKA,UAAU,WAAf,qDAGA,sBAAKA,UAAU,aAAf,2BACkB,uBADlB,wBAEyB,uBAFzB,qCAKA,sBAAKA,UAAU,aAAf,UACI,qBAAKA,UAAU,mBAAmBW,IAAKgB,EAAWf,IAAI,0BACtD,qBAAKZ,UAAU,mBAAmBW,IAAKiB,EAAahB,IAAI,4BACxD,qBAAKZ,UAAU,mBAAmBW,IAAKkB,EAAQjB,IAAI,kBAEvD,qBAAKZ,UAAU,mBAAf,SACI,cAAC,IAAD,CAAWE,KAAM,cCrBpB4B,G,OAAM,WACf,OACI,cAAC,EAAD,UACI,qBAAK9B,UAAU,MAAf,SACI,cAAC,EAAD,UCPhB+B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9ec9cc65.chunk.js","sourcesContent":["import React, { useState, createContext, useContext } from 'react';\n\nexport const WalletModalContext = createContext();\nexport const WalletModalProvider = ({ children }) => {\n    const [walletOverlayActive, setWalletOverlayActive] = useState(false);\n\n    return(\n        <WalletModalContext.Provider value={{ walletOverlayActive, setWalletOverlayActive }}>\n            {children}\n        </WalletModalContext.Provider>\n    );\n};\n\nexport const useWalletModalValue = () => useContext(WalletModalContext);\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { PortisConnector } from '@web3-react/portis-connector'\nimport { TorusConnector } from '@web3-react/torus-connector'\n\nconst RPC_URLS = {\n    1: process.env.RPC_URL_1,\n    4: process.env.RPC_URL_4\n}\n\nexport const injected = new InjectedConnector({ supportedChainIds: [1, 3, 4, 5, 42] })\n\nexport const walletconnect = new WalletConnectConnector({\n    rpc: { 1: RPC_URLS[1] },\n    qrcode: true\n  })\n\nexport const portis = new PortisConnector({ dAppId: process.env.PORTIS_DAPP_ID, networks: [1, 100] })\n\nexport const torus = new TorusConnector({ chainId: 1 })\n","import { useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { injected } from '../utils/wallet/Connectors'\n\nexport const useInactiveListener = (suppress = false) => {\n  const { active, error, activate } = useWeb3React()\n\n  useEffect(() => {\n    const { ethereum } = window\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\n      const handleConnect = () => {\n        console.log(\"Handling 'connect' event\")\n        activate(injected)\n      }\n      const handleChainChanged = (chainId) => {\n        console.log(\"Handling 'chainChanged' event with payload\", chainId)\n        activate(injected)\n      }\n      const handleAccountsChanged = (accounts) => {\n        console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n        if (accounts.length > 0) {\n          activate(injected)\n        }\n      }\n      const handleNetworkChanged = (networkId) => {\n        console.log(\"Handling 'networkChanged' event with payload\", networkId)\n        activate(injected)\n      }\n\n      ethereum.on('connect', handleConnect)\n      ethereum.on('chainChanged', handleChainChanged)\n      ethereum.on('accountsChanged', handleAccountsChanged)\n      ethereum.on('networkChanged', handleNetworkChanged)\n\n      return () => {\n        if (ethereum.removeListener) {\n          ethereum.removeListener('connect', handleConnect)\n          ethereum.removeListener('chainChanged', handleChainChanged)\n          ethereum.removeListener('accountsChanged', handleAccountsChanged)\n          ethereum.removeListener('networkChanged', handleNetworkChanged)\n        }\n      }\n    }\n  }, [active, error, suppress, activate])\n}\n","export default __webpack_public_path__ + \"static/media/metamask.4368e45a.svg\";","export default __webpack_public_path__ + \"static/media/walletconnect.dfa25e47.svg\";","export default __webpack_public_path__ + \"static/media/portis.35dcaf3f.svg\";","export default __webpack_public_path__ + \"static/media/torus.d05a3b02.svg\";","import React from \"react\";\nimport {\n    useWeb3React,\n    UnsupportedChainIdError,\n} from \"@web3-react/core\";\nimport {\n    NoEthereumProviderError,\n    UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from \"@web3-react/injected-connector\";\nimport { UserRejectedRequestError as UserRejectedRequestErrorWalletConnect } from \"@web3-react/walletconnect-connector\";\nimport { UserRejectedRequestError as UserRejectedRequestErrorFrame } from \"@web3-react/frame-connector\";\nimport { IoCloseOutline } from 'react-icons/io5';\nimport { useWalletModalValue } from \"../context\";\n\nimport { useEagerConnect } from \"../hooks/useEagerConnect\";\nimport { useInactiveListener } from '../hooks/useInactiveListener';\nimport { injected, walletconnect, portis, torus } from \"../utils/wallet/Connectors\";\n\nimport MetaMaskLogo from '../assets/images/metamask.svg';\nimport WalletConnectLogo from '../assets/images/walletconnect.svg';\nimport PortisLogo from '../assets/images/portis.svg';\nimport TorusLogo from '../assets/images/torus.svg';\n\nconst ConnectorNames = {\n    Injected: \"MetaMask\",\n    WalletConnect: \"WalletConnect\",\n    Portis: \"Portis\",\n    Torus: \"Torus\",\n};\n\nconst WalletLogos = {\n    'MetaMask': MetaMaskLogo,\n    'WalletConnect': WalletConnectLogo,\n    'Portis': PortisLogo,\n    'Torus': TorusLogo\n}\n\nconst connectorsByName = {\n    [ConnectorNames.Injected]: injected,\n    [ConnectorNames.WalletConnect]: walletconnect,\n    [ConnectorNames.Portis]: portis,\n    [ConnectorNames.Torus]: torus,\n};\n\nfunction getErrorMessage(error) {\n    if (error instanceof NoEthereumProviderError) {\n        return \"No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.\";\n    } else if (error instanceof UnsupportedChainIdError) {\n        return \"You're connected to an unsupported network.\";\n    } else if (\n        error instanceof UserRejectedRequestErrorInjected ||\n        error instanceof UserRejectedRequestErrorWalletConnect ||\n        error instanceof UserRejectedRequestErrorFrame\n    ) {\n        return \"Please authorize this website to access your Ethereum account.\";\n    } else {\n        console.error(error);\n        return \"An unknown error occurred. Check the console for more details.\";\n    }\n}\n\nexport const WalletModal = () => {\n    const context = useWeb3React();\n    const {\n        connector,\n        library,\n        chainId,\n        account,\n        activate,\n        deactivate,\n        active,\n        error,\n    } = context;\n\n    const [activatingConnector, setActivatingConnector] = React.useState();\n    React.useEffect(() => {\n        if (activatingConnector && activatingConnector === connector) {\n            setActivatingConnector(undefined);\n        }\n    }, [activatingConnector, connector]);\n\n    const triedEager = useEagerConnect();\n\n    useInactiveListener(!triedEager || !!activatingConnector);\n\n    const { walletOverlayActive, setWalletOverlayActive } = useWalletModalValue();\n\n    return (\n        <div className=\"WalletModal__toplevel\">\n            \n        <div className=\"WalletModal__container\">\n\n        <button\n            className=\"WalletModal__close-button\"\n            onClick={() => ( setWalletOverlayActive(!walletOverlayActive))}\n        ><IoCloseOutline size={25} /></button>\n            <div className=\"WalletModal__header\">\n                <div className=\"WalletModal__title\">Connect Wallet</div>\n            </div>\n            <hr />\n            <div className=\"WalletModal__buttons-container\">\n                {Object.keys(connectorsByName).map((name) => {\n                    const currentConnector = connectorsByName[name];\n                    const activating = currentConnector === activatingConnector;\n                    const connected = currentConnector === connector;\n                    const disabled =\n                        !triedEager ||\n                        !!activatingConnector ||\n                        connected ||\n                        !!error;\n\n                    return (\n                        <button\n                            className=\"WalletModal__buttons\"\n                            disabled={disabled}\n                            key={name}\n                            onClick={() => {\n                                setActivatingConnector(currentConnector);\n                                activate(connectorsByName[name]);\n                            }}\n                        >\n                            <div className=\"WalletModal__buttons-active\">\n                                {activating}\n                                {connected}\n                            </div>\n                            {<img className=\"WalletOptionLogos\" src={WalletLogos[name]} alt={name} />}\n                            {<span className=\"WalletOptionText\">{name}</span>}\n                        </button>\n                    );\n                })}\n            </div>\n            <div>\n                {(active || error) && (\n                    <button\n                        onClick={() => {\n                            deactivate();\n                        }}\n                    >\n                        Deactivate\n                    </button>\n                )}\n\n                {!!error && (\n                    <h4>\n                        {getErrorMessage(error)}\n                    </h4>\n                )}\n            </div>\n\n            <div>\n                {!!(library && account) && (\n                    <button\n                        onClick={() => {\n                            library\n                                .getSigner(account)\n                                .signMessage(\"Message to be signed?\")\n                                .then((signature) => {\n                                    window.alert(`Success!\\n\\n${signature}`);\n                                })\n                                .catch((error) => {\n                                    window.alert(\n                                        \"Failure!\" +\n                                            (error && error.message\n                                                ? `\\n\\n${error.message}`\n                                                : \"\")\n                                    );\n                                });\n                        }}\n                    >\n                        Sign Message\n                    </button>\n                )}\n                {connector ===\n                    connectorsByName[ConnectorNames.WalletConnect] && (\n                    <button\n                        onClick={() => {\n                            connector.close();\n                        }}\n                    >\n                        Kill WalletConnect Session\n                    </button>\n                )}\n                {connector === connectorsByName[ConnectorNames.Portis] && (\n                    <>\n                        {chainId !== undefined && (\n                            <button\n                                onClick={() => {\n                                    connector.changeNetwork(\n                                        chainId === 1 ? 100 : 1\n                                    );\n                                }}\n                            >\n                                Switch Networks\n                            </button>\n                        )}\n                        <button\n                            onClick={() => {\n                                connector.close();\n                            }}\n                        >\n                            Kill Portis Session\n                        </button>\n                    </>\n                )}\n                {connector === connectorsByName[ConnectorNames.Torus] && (\n                    <button\n                        onClick={() => {\n                            connector.close();\n                        }}\n                    >\n                        Kill Torus Session\n                    </button>\n                )}\n            </div>\n        </div></div>\n    );\n}\n","import { useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\n\nimport { injected } from '../utils/wallet/Connectors'\n\nexport function useEagerConnect() {\n    const { activate, active } = useWeb3React()\n  \n    const [tried, setTried] = useState(false)\n  \n    useEffect(() => {\n      injected.isAuthorized().then((isAuthorized) => {\n        if (isAuthorized) {\n          activate(injected, undefined, true).catch(() => {\n            setTried(true)\n          })\n        } else {\n          setTried(true)\n        }\n      })\n    }, /*[]*/ )\n  \n    useEffect(() => {\n      if (!tried && active) {\n        setTried(true)\n      }\n    }, [tried, active])\n  \n    return tried\n  }","import React from \"react\";\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport { Web3ReactProvider } from \"@web3-react/core\";\nimport { Web3Provider } from \"@ethersproject/providers\";\n\nimport { WalletModal } from \"../WalletModal\";\nimport { useWalletModalValue } from \"../../context\";\n\nfunction getLibrary(provider) {\n    const library = new Web3Provider(provider);\n    library.pollingInterval = 12000;\n    return library;\n}\n\nexport const Navbar = () => {\n    const { walletOverlayActive, setWalletOverlayActive } =\n        useWalletModalValue();\n\n    return (\n        <Router>\n            <div className=\"NavbarContainer\">\n                <nav>\n                    <Link className=\"NavLogo\" to=\"#\">\n                        second.exchange\n                    </Link>\n                    <div className=\"NavOptions\">\n                        <Link className=\"NavItem\" to=\"#\">\n                            Explore\n                        </Link>\n                        <Link className=\"NavItem\" to=\"#\">\n                            Creators\n                        </Link>\n                        <Link className=\"NavItem\" to=\"#\">\n                            Community\n                        </Link>\n                    </div>\n                    <button\n                        className=\"WalletConnectButton\"\n                        onClick={() =>\n                            setWalletOverlayActive(!walletOverlayActive)\n                        }\n                    >\n                        Connect Wallet\n                    </button>\n                </nav>\n            </div>\n            {walletOverlayActive && (\n                <Web3ReactProvider getLibrary={getLibrary}>\n                    <WalletModal />\n                </Web3ReactProvider>\n            )}\n        </Router>\n    );\n};\n","export default __webpack_public_path__ + \"static/media/canvas.94d95a35.jpg\";","export default __webpack_public_path__ + \"static/media/blogging.97d26d94.png\";","export default __webpack_public_path__ + \"static/media/nft.74f2c6cd.jpg\";","import React from \"react\";\nimport { CgProfile } from 'react-icons/cg';\n\nimport { Navbar } from '../components/layout/Navbar';\n\nimport CanvasPic from '../assets/images/canvas.jpg';\nimport BloggingPic from '../assets/images/blogging.png';\nimport NFTPic from '../assets/images/nft.jpg';\n\nexport const Home = () => {\n    return (\n        <div className=\"Home\">\n            <Navbar />\n            <div className=\"MainContent\">\n            <div className=\"subtitle\">\n                DECENTRALIZED BLOGGING AND NFT PLATFORM\n            </div>\n            <div className=\"title-line\">\n                Publish blogs,<br />\n                Buy and sell as NFTs,<br />\n                Support your favorite creators.\n            </div>\n            <div className=\"HomeImages\">\n                <img className=\"HomeImages__item\" src={CanvasPic} alt=\"collaborate on canvas\" />\n                <img className=\"HomeImages__item\" src={BloggingPic} alt=\"write and publish blogs\" />\n                <img className=\"HomeImages__item\" src={NFTPic} alt=\"trade NFTs\" />\n            </div>\n            <div className=\"ProfileContainer\">\n                <CgProfile size={42} />\n            </div>\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\n\nimport { Home } from \"./routes/Home\";\nimport { WalletModalProvider } from \"./context\";\n\nimport './App.scss';\n\nexport const App = () => {\n    return (\n        <WalletModalProvider>\n            <div className=\"App\">\n                <Home />\n            </div>\n        </WalletModalProvider>\n    );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { App } from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}
{"version":3,"sources":["assets/images/canvas.jpg","assets/images/blogging.png","assets/images/nft.jpg","routes/Home.jsx","assets/images/publish-nft.svg","assets/images/upload-blog.svg","assets/images/create-blog.svg","assets/images/create-canvas.svg","routes/Dashboard.jsx","routes/Explore.jsx","routes/Creators.jsx","routes/Community.jsx","routes/BlogEditor.jsx","routes/NotFound.jsx","context/wallet-modal-context.js","context/metaroot-modal-context.js","utils/wallet/Connectors.js","hooks/useInactiveListener.js","assets/images/metamask.svg","assets/images/walletconnect.svg","assets/images/portis.svg","assets/images/torus.svg","components/WalletModal.jsx","hooks/useEagerConnect.js","components/layout/Navbar.jsx","components/MetarootModal.jsx","components/UserInfoSectionRect.jsx","components/UserProfileSection.jsx","components/SidebarButton.jsx","assets/images/undraw-female-avatar.svg","assets/images/avax.svg","assets/images/nft-symbol.svg","components/layout/Sidebar.jsx","App.js","index.js"],"names":["Home","className","src","CanvasPic","alt","BloggingPic","NFTPic","size","Dashboard","to","CreateBlog","UploadBlog","CreateCanvas","PublishNFT","Explore","Creators","Community","BlogEditor","React","useState","EditorState","createEmpty","editorState","setEditorState","editor","useRef","onClick","current","focus","ref","onChange","placeholder","NotFound","WalletModalContext","createContext","WalletModalProvider","children","walletOverlayActive","setWalletOverlayActive","Provider","value","useWalletModalValue","useContext","MetarootModalContext","MetarootModalProvider","metarootOverlayActive","setMetarootOverlayActive","useMetarootModalValue","RPC_URLS","process","RPC_URL_1","RPC_URL_4","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","qrcode","portis","PortisConnector","dAppId","networks","torus","TorusConnector","chainId","ConnectorNames","WalletLogos","MetaMask","MetaMaskLogo","WalletConnect","WalletConnectLogo","Portis","PortisLogo","Torus","TorusLogo","connectorsByName","getErrorMessage","error","NoEthereumProviderError","UnsupportedChainIdError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","UserRejectedRequestErrorFrame","toast","WalletModal","useMoralis","authenticate","isAuthenticated","logout","context","useWeb3React","navigate","useNavigate","connector","library","account","activate","deactivate","active","activatingConnector","setActivatingConnector","useEffect","undefined","triedEager","tried","setTried","isAuthorized","then","catch","useEagerConnect","suppress","ethereum","window","on","handleConnect","handleChainChanged","handleAccountsChanged","accounts","length","handleNetworkChanged","networkId","removeListener","useInactiveListener","disconnect","a","location","reload","console","log","Object","keys","map","name","currentConnector","activating","connected","disabled","getSigner","signMessage","signature","success","message","close","changeNetwork","getLibrary","provider","Web3Provider","pollingInterval","Navbar","MetarootModal","UserInfoSectionRect","InfoTitle","InfoValue","InfoImage","InfoUnit","InfoImageClass","UserProfileSection","userProfileImage","userWalletAddress","SidebarButton","ButtonIcon","ButtonText","Sidebar","userBalance","setUserBalance","Moralis","userAddressDisplay","user","attributes","substring","Web3API","getNativeBalance","balance","FemaleAvatar","AvaxLogo","NFTSymbol","App","path","element","exact","ReactDOM","render","appId","serverUrl","document","getElementById"],"mappings":"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","file":"static/js/main.1970c3b2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/canvas.94d95a35.jpg\";","export default __webpack_public_path__ + \"static/media/blogging.97d26d94.png\";","export default __webpack_public_path__ + \"static/media/nft.74f2c6cd.jpg\";","import React from \"react\";\nimport { CgProfile } from 'react-icons/cg';\n\nimport CanvasPic from '../assets/images/canvas.jpg';\nimport BloggingPic from '../assets/images/blogging.png';\nimport NFTPic from '../assets/images/nft.jpg';\n\nexport const Home = () => {\n    return (\n        <div className=\"home\">\n            <div className=\"main-content\">\n            <div className=\"subtitle\">\n                Create your community, voice collective and share wealth, <p> The first exchange was only benefitting few , lets reclaim the space of our attention and re-distribute what is ours (all of us) </p>\n            </div>\n            <div className=\"title-line\">\n                Create communities,<br />\n                Share values,<br />\n                Support your favorite creators, <br/>\n            </div>\n            <div className=\"home-images\">\n                <img className=\"home-images__item\" src={CanvasPic} alt=\"collaborate on canvas\" />\n                <img className=\"home-images__item\" src={BloggingPic} alt=\"write and publish blogs\" />\n                <img className=\"home-images__item\" src={NFTPic} alt=\"trade NFTs\" />\n            </div>\n            <div className=\"profile-container\">\n                <CgProfile size={42} />\n            </div>\n            </div>\n        </div>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/publish-nft.3477f253.svg\";","export default __webpack_public_path__ + \"static/media/upload-blog.b3dfc465.svg\";","export default __webpack_public_path__ + \"static/media/create-blog.8c7f4317.svg\";","export default __webpack_public_path__ + \"static/media/create-canvas.0b227bde.svg\";","import React from \"react\";\nimport { Link } from 'react-router-dom';\n\nimport PublishNFT from \"../assets/images/publish-nft.svg\";\nimport UploadBlog from \"../assets/images/upload-blog.svg\";\nimport CreateBlog from \"../assets/images/create-blog.svg\";\nimport CreateCanvas from \"../assets/images/create-canvas.svg\";\n\nexport const Dashboard = () => {\n    // When on custom domain change Link's \"to\" value to '/WriteBlog'\n    return (\n        <div className=\"dashboard-container\">\n            <div className=\"dashboard__col-1\">\n                <div className=\"dashboard__col-1-row-1\"></div>\n                <div className=\"dashboard__col-1-row-2\"></div>\n            </div>\n            <div className=\"dashboard__col-2\">\n                <div className=\"create-section\">\n                    <span className=\"dashboard-heading\">Create</span>\n                    <div className=\"create-options\">\n                        <Link to='/second.exchange/WriteBlog' className=\"create-options__item\">\n                            <span>\n                                <img src={CreateBlog} alt=\"create-blog\" />\n                            </span>\n                            <span className=\"create-options__item-text\">\n                                Write Blog\n                            </span>\n                        </Link>\n                        <div className=\"create-options__item\">\n                            <span>\n                                <img src={UploadBlog} alt=\"upload-blog\" />\n                            </span>\n                            <span className=\"create-options__item-text\">\n                                Upload Blog\n                            </span>\n                        </div>\n                        <div className=\"create-options__item\">\n                            <span>\n                                <img src={CreateCanvas} alt=\"create-canvas\" />\n                            </span>\n                            <span className=\"create-options__item-text\">\n                                Build Canvas\n                            </span>\n                        </div>\n                        <div className=\"create-options__item\">\n                            <span>\n                                <img src={PublishNFT} alt=\"publish-nft\" />\n                            </span>\n                            <span className=\"create-options__item-text\">\n                                Publish NFT\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\n\nexport const Explore = () => {\n    return (\n        <div>\n            Explore\n        </div>\n    )\n}\n","import React from 'react';\n\nexport const Creators = () => {\n    return (\n        <div>\n            Creators\n        </div>\n    )\n}\n","import React from 'react';\n\nexport const Community = () => {\n    return (\n        <div>\n            Community\n        </div>\n    )\n}\n","import React from \"react\";\nimport { Editor, EditorState } from \"draft-js\";\nimport \"draft-js/dist/Draft.css\";\n\nexport const BlogEditor = () => {\n    const [editorState, setEditorState] = React.useState(() =>\n        EditorState.createEmpty()\n    );\n\n    const editor = React.useRef(null);\n    function focusEditor() {\n        editor.current.focus();\n    }\n\n    return (\n        <div className=\"blog-editor-container\" onClick={focusEditor}>\n            <Editor\n                ref={editor}\n                editorState={editorState}\n                onChange={setEditorState}\n                placeholder={\"Blog Title \\n Author Name\"}\n            />\n        </div>\n    );\n};\n","import React from 'react';\n\nexport const NotFound = () => {\n    return(\n        <div className='not-found-container'>\n            Seems like the page doesn't exist or you are not logged in\n        </div>\n    )\n}\n","import React, { useState, createContext, useContext } from 'react';\n\nexport const WalletModalContext = createContext();\nexport const WalletModalProvider = ({ children }) => {\n    const [walletOverlayActive, setWalletOverlayActive] = useState(false);\n\n    return(\n        <WalletModalContext.Provider value={{ walletOverlayActive, setWalletOverlayActive }}>\n            {children}\n        </WalletModalContext.Provider>\n    );\n};\n\nexport const useWalletModalValue = () => useContext(WalletModalContext);\n","import React, { useState, createContext, useContext } from 'react';\n\nexport const MetarootModalContext = createContext();\nexport const MetarootModalProvider = ({ children }) => {\n    const [metarootOverlayActive, setMetarootOverlayActive] = useState(false);\n\n    return(\n        <MetarootModalContext.Provider value={{ metarootOverlayActive, setMetarootOverlayActive }}>\n            {children}\n        </MetarootModalContext.Provider>\n    );\n};\n\nexport const useMetarootModalValue = () => useContext(MetarootModalContext);\n","import { TorusConnector } from \"@web3-react/torus-connector\";\nimport { PortisConnector } from \"@web3-react/portis-connector\";\nimport { InjectedConnector } from \"@web3-react/injected-connector\";\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\n\nconst RPC_URLS = {\n  1: process.env.RPC_URL_1,\n  4: process.env.RPC_URL_4,\n};\n\nexport const injected = new InjectedConnector({\n  supportedChainIds: [1, 3, 4, 5, 42],\n});\n\nexport const walletconnect = new WalletConnectConnector({\n  rpc: { 1: RPC_URLS[1] },\n  qrcode: true,\n});\n\nexport const portis = new PortisConnector({\n  dAppId: \"1ff0817c-2ed0-453a-b2a8-1c935877a886\",\n  networks: [1, 100],\n});\n\nexport const torus = new TorusConnector({ chainId: 1 });\n","import { useEffect } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nimport { injected } from \"../utils/wallet/Connectors\";\n\nexport const useInactiveListener = (suppress = false) => {\n    const { active, error, activate } = useWeb3React();\n\n    useEffect(() => {\n        const { ethereum } = window;\n        if (ethereum && ethereum.on && !active && !error && !suppress) {\n            const handleConnect = () => {\n                //        console.log(\"Handling 'connect' event\")\n                activate(injected);\n            };\n            const handleChainChanged = (chainId) => {\n                //        console.log(\"Handling 'chainChanged' event with payload\", chainId)\n                activate(injected);\n            };\n            const handleAccountsChanged = (accounts) => {\n                //        console.log(\"Handling 'accountsChanged' event with payload\", accounts)\n                if (accounts.length > 0) {\n                    activate(injected);\n                }\n            };\n            const handleNetworkChanged = (networkId) => {\n                //        console.log(\"Handling 'networkChanged' event with payload\", networkId)\n                activate(injected);\n            };\n\n            ethereum.on(\"connect\", handleConnect);\n            ethereum.on(\"chainChanged\", handleChainChanged);\n            ethereum.on(\"accountsChanged\", handleAccountsChanged);\n            ethereum.on(\"networkChanged\", handleNetworkChanged);\n\n            return () => {\n                if (ethereum.removeListener) {\n                    ethereum.removeListener(\"connect\", handleConnect);\n                    ethereum.removeListener(\"chainChanged\", handleChainChanged);\n                    ethereum.removeListener(\n                        \"accountsChanged\",\n                        handleAccountsChanged\n                    );\n                    ethereum.removeListener(\n                        \"networkChanged\",\n                        handleNetworkChanged\n                    );\n                }\n            };\n        }\n    }, [active, error, suppress, activate]);\n};\n","export default __webpack_public_path__ + \"static/media/metamask.4368e45a.svg\";","export default __webpack_public_path__ + \"static/media/walletconnect.dfa25e47.svg\";","export default __webpack_public_path__ + \"static/media/portis.35dcaf3f.svg\";","export default __webpack_public_path__ + \"static/media/torus.d05a3b02.svg\";","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport { useWeb3React, UnsupportedChainIdError } from \"@web3-react/core\";\nimport {\n    NoEthereumProviderError,\n    UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from \"@web3-react/injected-connector\";\nimport { UserRejectedRequestError as UserRejectedRequestErrorWalletConnect } from \"@web3-react/walletconnect-connector\";\nimport { UserRejectedRequestError as UserRejectedRequestErrorFrame } from \"@web3-react/frame-connector\";\nimport { IoCloseOutline } from \"react-icons/io5\";\nimport { useMoralis } from \"react-moralis\";\n\nimport { useWalletModalValue } from \"../context\";\nimport { useEagerConnect } from \"../hooks/useEagerConnect\";\nimport { useInactiveListener } from \"../hooks/useInactiveListener\";\nimport { walletconnect, portis, torus } from \"../utils/wallet/Connectors\";\n\nimport MetaMaskLogo from \"../assets/images/metamask.svg\";\nimport WalletConnectLogo from \"../assets/images/walletconnect.svg\";\nimport PortisLogo from \"../assets/images/portis.svg\";\nimport TorusLogo from \"../assets/images/torus.svg\";\n\nconst ConnectorNames = {\n    WalletConnect: \"WalletConnect\",\n    Portis: \"Portis\",\n    Torus: \"Torus\",\n};\n\nconst WalletLogos = {\n    MetaMask: MetaMaskLogo,\n    WalletConnect: WalletConnectLogo,\n    Portis: PortisLogo,\n    Torus: TorusLogo,\n};\n\nconst connectorsByName = {\n    [ConnectorNames.WalletConnect]: walletconnect,\n    [ConnectorNames.Portis]: portis,\n    [ConnectorNames.Torus]: torus,\n};\n\nfunction getErrorMessage(error) {\n    if (error instanceof NoEthereumProviderError) {\n        return \"No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.\";\n    } else if (error instanceof UnsupportedChainIdError) {\n        return \"You're connected to an unsupported network.\";\n    } else if (\n        error instanceof UserRejectedRequestErrorInjected ||\n        error instanceof UserRejectedRequestErrorWalletConnect ||\n        error instanceof UserRejectedRequestErrorFrame\n    ) {\n        return \"Please authorize this website to access your Ethereum account.\";\n    } else {\n        toast.error(error);\n        return \"An unknown error occurred. Check the console for more details.\";\n    }\n}\n\nexport const WalletModal = () => {\n    const { authenticate, isAuthenticated, logout } = useMoralis();\n    const context = useWeb3React();\n    const navigate = useNavigate();\n\n    const {\n        connector,\n        library,\n        chainId,\n        account,\n        activate,\n        deactivate,\n        active,\n        error,\n    } = context;\n\n    const [activatingConnector, setActivatingConnector] = React.useState();\n    React.useEffect(() => {\n        if (activatingConnector && activatingConnector === connector) {\n            setActivatingConnector(undefined);\n        }\n    }, [activatingConnector, connector]);\n\n    const triedEager = useEagerConnect();\n\n    useInactiveListener(!triedEager || !!activatingConnector);\n\n    const { walletOverlayActive, setWalletOverlayActive } =\n        useWalletModalValue();\n\n    const disconnect = async () => {\n        try {\n            await deactivate();\n            window.location.reload();\n        } catch (ex) {\n            console.log(\"erros\", ex);\n        }\n    };\n\n    return (\n        <div className=\"wallet-modal__top-level\">\n            <div className=\"wallet-modal__container\">\n                <button\n                    className=\"wallet-modal__close-button\"\n                    onClick={() => setWalletOverlayActive(!walletOverlayActive)}\n                >\n                    <IoCloseOutline size={25} />\n                </button>\n                <div className=\"wallet-modal__header\">\n                    <div className=\"wallet-modal__title\">Connect Wallet</div>\n                </div>\n                <hr />\n                <div className=\"wallet-modal__buttons-container\">\n                    <button\n                        className=\"wallet-modal__buttons\"\n                        onClick={() => {\n                            authenticate();\n                        }}\n                    >\n                        {\n                            <img\n                                className=\"wallet-option-logos\"\n                                src={MetaMaskLogo}\n                                alt=\"MetaMask\"\n                            />\n                        }\n                        {<span className=\"wallet-option-text\">MetaMask</span>}\n                    </button>\n                    {Object.keys(connectorsByName).map((name) => {\n                        const currentConnector = connectorsByName[name];\n                        const activating =\n                            currentConnector === activatingConnector;\n                        const connected = currentConnector === connector;\n                        const disabled =\n                            !triedEager ||\n                            !!activatingConnector ||\n                            connected ||\n                            !!error;\n\n                        return (\n                            <button\n                                className=\"wallet-modal__buttons\"\n                                disabled={disabled}\n                                key={name}\n                                onClick={() => {\n                                    setActivatingConnector(currentConnector);\n                                    activate(connectorsByName[name]);\n                                }}\n                            >\n                                <div className=\"wallet-modal__buttons-active\">\n                                    {activating}\n                                    {connected}\n                                </div>\n                                {\n                                    <img\n                                        className=\"wallet-option-logos\"\n                                        src={WalletLogos[name]}\n                                        alt={name}\n                                    />\n                                }\n                                {\n                                    <span className=\"wallet-option-text\">\n                                        {name}\n                                    </span>\n                                }\n                            </button>\n                        );\n                    })}\n                </div>\n                <hr />\n                {isAuthenticated && (\n                    <div className=\"wallet-option-ops\">\n                        {(active || error) && (\n                            <button\n                                className=\"wallet-option-ops-button\"\n                                onClick={() => {\n                                    disconnect();\n                                    logout();\n                                    navigate(\"/second.exchange\");\n                                }}\n                            >\n                                Disconnect\n                            </button>\n                        )}\n\n                        {!!error &&\n                            toast.error(\"Faliure!\" + getErrorMessage(error))}\n                    </div>\n                )}\n\n                {isAuthenticated && (\n                    <div className=\"wallet-option-ops\">\n                        {!!(library && account) && (\n                            <button\n                                className=\"wallet-option-ops-button\"\n                                onClick={() => {\n                                    library\n                                        .getSigner(account)\n                                        .signMessage(\"Message to be signed?\")\n                                        .then((signature) => {\n                                            toast.success(\n                                                `Success!\\n\\n${signature}`\n                                            );\n                                        })\n                                        .catch((error) => {\n                                            toast.error(\n                                                \"Failure!\" +\n                                                    (error && error.message\n                                                        ? `\\n\\n${error.message}`\n                                                        : \"\")\n                                            );\n                                        });\n                                }}\n                            >\n                                Sign Message\n                            </button>\n                        )}\n                        {connector ===\n                            connectorsByName[ConnectorNames.WalletConnect] && (\n                            <button\n                                onClick={() => {\n                                    connector.close();\n                                }}\n                            >\n                                Kill WalletConnect Session\n                            </button>\n                        )}\n                        {connector ===\n                            connectorsByName[ConnectorNames.Portis] && (\n                            <>\n                                {chainId !== undefined && (\n                                    <button\n                                        onClick={() => {\n                                            connector.changeNetwork(\n                                                chainId === 1 ? 100 : 1\n                                            );\n                                        }}\n                                    >\n                                        Switch Networks\n                                    </button>\n                                )}\n                                <button\n                                    onClick={() => {\n                                        connector.close();\n                                    }}\n                                >\n                                    Kill Portis Session\n                                </button>\n                            </>\n                        )}\n                        {connector ===\n                            connectorsByName[ConnectorNames.Torus] && (\n                            <button\n                                onClick={() => {\n                                    connector.close();\n                                }}\n                            >\n                                Kill Torus Session\n                            </button>\n                        )}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n","import { useState, useEffect } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nimport { injected } from \"../utils/wallet/Connectors\";\n\nexport function useEagerConnect() {\n  const { activate, active } = useWeb3React();\n\n  const [tried, setTried] = useState(false);\n\n  useEffect(() => {\n    injected.isAuthorized().then((isAuthorized) => {\n      if (isAuthorized) {\n        activate(injected, undefined, true).catch(() => {\n          setTried(true);\n        });\n      } else {\n        setTried(true);\n      }\n    });\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (!tried && active) {\n      setTried(true);\n    }\n  }, [tried, active]);\n\n  return tried;\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Web3ReactProvider } from \"@web3-react/core\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { useMoralis } from \"react-moralis\";\n\nimport { WalletModal } from \"../WalletModal\";\nimport { useWalletModalValue } from \"../../context\";\n\nimport MetaMaskLogo from \"../../assets/images/metamask.svg\";\n\nfunction getLibrary(provider) {\n    const library = new Web3Provider(provider);\n    library.pollingInterval = 12000;\n    return library;\n}\n\nexport const Navbar = () => {\n    const { walletOverlayActive, setWalletOverlayActive } =\n        useWalletModalValue();\n    const { isAuthenticated } = useMoralis();\n    useEffect(() => {\n        setWalletOverlayActive(false);\n    }, [isAuthenticated]);\n    // When on custom domain change Link's \"to\" value to '/route'\n    return (\n        <div className=\"navbar-container\">\n            <nav>\n                <Link\n                    className={\n                        isAuthenticated\n                            ? \"nav-logo selected-nav-option\"\n                            : \"nav-logo\"\n                    }\n                    to=\"/second.exchange/\"\n                >\n                    second.exchange\n                </Link>\n                <div className=\"nav-options\">\n                    <Link className=\"nav-item\" to=\"/second.exchange/Explore\">\n                        Explore\n                    </Link>\n                    <Link className=\"nav-item\" to=\"/second.exchange/Creators\">\n                        Creators\n                    </Link>\n                    <Link className=\"nav-item\" to=\"/second.exchange/Community\">\n                        Community\n                    </Link>\n                </div>\n                <button\n                    className={\n                        isAuthenticated\n                            ? \"wallet-connected-button\"\n                            : \"wallet-connect-button\"\n                    }\n                    onClick={() => setWalletOverlayActive(!walletOverlayActive)}\n                >\n                    {isAuthenticated ? (\n                        <img\n                            className=\"wallet-connected-figure\"\n                            src={MetaMaskLogo}\n                            alt=\"metamask\"\n                        />\n                    ) : (\n                        \"Connect Wallet\"\n                    )}\n                    {isAuthenticated ? (\n                        <div className=\"wallet-connected-text\">Connected</div>\n                    ) : (\n                        \"\"\n                    )}\n                </button>\n            </nav>\n            {walletOverlayActive && (\n                <Web3ReactProvider getLibrary={getLibrary}>\n                    <WalletModal />\n                </Web3ReactProvider>\n            )}\n        </div>\n    );\n};\n","import React from 'react';\nimport { IoCloseOutline } from \"react-icons/io5\";\n\nimport { useMetarootModalValue } from \"../context\";\n\nexport const MetarootModal = () => {\n    const { metarootOverlayActive, setMetarootOverlayActive } =\n    useMetarootModalValue();\n    return(\n        <div className='metaroot-modal__top-level'>\n            <div className='metaroot-modal__container'>\n                <button\n                    className=\"metaroot-modal__close-button\"\n                    onClick={() => setMetarootOverlayActive(!metarootOverlayActive)}\n                >\n                    <IoCloseOutline size={25} />\n                </button>\n                <div className=\"wallet-modal__header\">\n                    <div className=\"wallet-modal__title\">Claim identity with metaroot</div>\n                </div>\n                <hr />\n                <div className=\"wallet-modal__buttons-container\">Claiming name through metaroot/ANS coming soon</div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\n\nexport const UserInfoSectionRect = ({ InfoTitle, InfoValue, InfoImage, InfoUnit, InfoImageClass=''}) => {\n    return (\n        <div className=\"sidebar-section\">\n            <div className=\"sidebar-section__title\">{InfoTitle}</div>\n            <div className=\"sidebar-section__value\">\n                {InfoValue}\n            </div>\n            <div className=\"sidebar-section__unit\">\n                <img className={InfoImageClass + \"avax-logo\"} src={InfoImage} alt=\"avax\" />\n                <span>{InfoUnit}</span>\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\nimport { useMetarootModalValue } from \"../context\";\n\nimport { BsPlusLg } from \"react-icons/bs\";\n\nexport const UserProfileSection = ({ userProfileImage, userWalletAddress }) => {\n    const { metarootOverlayActive, setMetarootOverlayActive } =\n        useMetarootModalValue();\n\n    return(\n        <div className=\"user-details\">\n            <span>\n                <img\n                    className=\"user-profile-pic-sidebar\"\n                    src={userProfileImage}\n                    alt=\"female avatar\"\n                />\n            </span>\n            <div className=\"user-details__name-details\">\n                <div className=\"user-details__name\">Second Exchanger</div>\n                <div className=\"user-details__details\">\n                    {userWalletAddress}\n                </div>\n            </div>\n            <div\n                className=\"user-details__plus\"\n                onClick={() =>\n                    setMetarootOverlayActive(!metarootOverlayActive)\n                }\n            >\n                <BsPlusLg size={24} />\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\n\nexport const SidebarButton = ({ ButtonIcon, ButtonText}) => {\n    return(\n        <div className=\"sidebar-buttons__item\">\n            {ButtonIcon}\n            <span className=\"sidebar-buttons__text\">{ButtonText}</span>\n        </div>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/undraw-female-avatar.cb71b8c2.svg\";","export default __webpack_public_path__ + \"static/media/avax.234db155.svg\";","export default __webpack_public_path__ + \"static/media/nft-symbol.a5f19ebc.svg\";","import React, { useEffect, useState } from \"react\";\nimport { useMoralis } from \"react-moralis\";\n\nimport { IoMdMoon } from \"react-icons/io\";\nimport { VscBellDot } from \"react-icons/vsc\";\nimport { IoMdSettings } from \"react-icons/io\";\n\nimport { MetarootModal } from \"../MetarootModal\";\nimport { UserInfoSectionRect } from \"../UserInfoSectionRect\";\nimport { UserProfileSection } from \"../UserProfileSection\";\nimport { SidebarButton } from \"../SidebarButton\";\nimport { useMetarootModalValue } from \"../../context\";\n\nimport FemaleAvatar from \"../../assets/images/undraw-female-avatar.svg\";\nimport AvaxLogo from \"../../assets/images/avax.svg\";\nimport NFTSymbol from \"../../assets/images/nft-symbol.svg\";\n\nexport const Sidebar = () => {\n    const [userBalance, setUserBalance] = useState(\"\");\n    const { metarootOverlayActive } = useMetarootModalValue();\n    const { Moralis, user } = useMoralis();\n    const userAddress = user.attributes.accounts[0];\n    const userNFTs = 55;\n    let maxAddressLength = 10;\n    let userAddressDisplay = userAddress.substring(0, maxAddressLength) + \"...\";\n\n    useEffect(() => {\n        Moralis.Web3API.account\n            .getNativeBalance()\n            .then((balance) => setUserBalance(balance));\n    }, [Moralis.Web3API.account, userBalance]);\n\n    return (\n        <div className=\"sidebar-container\">\n            <UserProfileSection\n                userProfileImage={FemaleAvatar}\n                userWalletAddress={userAddressDisplay}\n            />\n            <UserInfoSectionRect\n                InfoTitle={\"Your Balance\"}\n                InfoValue={userBalance[\"balance\"]}\n                InfoImage={AvaxLogo}\n                InfoUnit={\"AVAX\"}\n            />\n            <UserInfoSectionRect\n                InfoTitle={\"Your Items\"}\n                InfoValue={userNFTs}\n                InfoImage={NFTSymbol}\n                InfoUnit={\"NFTs\"}\n                InfoImageClass={\"NFT-logo\"}\n            />\n            <div className=\"sidebar-buttons\">\n                <SidebarButton \n                    ButtonIcon={<IoMdMoon size={30}/>}\n                    ButtonText={\"DarkMode\"}\n                />\n                <SidebarButton \n                    ButtonIcon={<VscBellDot size={30}/>}\n                    ButtonText={\"Alerts\"}\n                />\n                <SidebarButton \n                    ButtonIcon={<IoMdSettings size={30}/>}\n                    ButtonText={\"Settings\"}\n                />\n            </div>\n            {metarootOverlayActive && <MetarootModal />}\n        </div>\n    );\n};\n","import React from \"react\";\nimport { Routes, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport { useMoralis } from \"react-moralis\";\nimport { ToastContainer } from \"react-toastify\";\n\nimport { Home } from \"./routes/Home\";\nimport { Dashboard } from \"./routes/Dashboard\";\nimport { Explore } from \"./routes/Explore\";\nimport { Creators } from \"./routes/Creators\";\nimport { Community } from \"./routes/Community\";\nimport { BlogEditor } from \"./routes/BlogEditor\";\nimport { NotFound } from \"./routes/NotFound\";\n\nimport { WalletModalProvider } from \"./context\";\nimport { MetarootModalProvider } from \"./context\";\nimport { Navbar } from \"./components/layout/Navbar\";\nimport { Sidebar } from \"./components/layout/Sidebar\";\n\nimport \"./App.scss\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport const App = () => {\n    const { isAuthenticated } = useMoralis();\n    // All routes should be '/' for custom domain\n    return (\n        <Router>\n            <WalletModalProvider>\n                <MetarootModalProvider>\n                    <ToastContainer />\n                    <Navbar />\n                    <div className={isAuthenticated ? \"content-container\" : \"\"}>\n                        {isAuthenticated && (\n                            <div className=\"sidebar-div\">\n                                <Sidebar />\n                            </div>\n                        )}\n                        <div\n                            className={isAuthenticated ? \"main-content-div\" : \"\"}\n                        >\n                            <Routes>\n                                <Route path=\"*\" element={<NotFound />} />\n                                {!isAuthenticated && (\n                                    <Route path=\"/second.exchange\" element={<Home />} />\n                                )}\n                                {isAuthenticated && (\n                                    <Route\n                                        path=\"/second.exchange\"\n                                        element={<Dashboard />}\n                                        exact\n                                    />\n                                )}\n                                <Route path=\"/second.exchange/Explore\" element={<Explore />} />\n                                <Route\n                                    path=\"/second.exchange/Creators\"\n                                    element={<Creators />}\n                                />\n                                <Route\n                                    path=\"/second.exchange/Community\"\n                                    element={<Community />}\n                                />\n                                {isAuthenticated && (\n                                    <Route\n                                        path=\"/second.exchange/WriteBlog\"\n                                        element={<BlogEditor />}\n                                    />\n                                )}\n                            </Routes>\n                        </div>\n                    </div>\n                </MetarootModalProvider>\n            </WalletModalProvider>\n        </Router>\n    );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { MoralisProvider } from \"react-moralis\";\n\nimport { App } from \"./App\";\n\nReactDOM.render(\n    <MoralisProvider\n        appId=\"Hq0CvClFFiHVNkjTS7x4bISqbRSVLqOyYIG7J3NA\"\n        serverUrl=\"https://hvxpiojoa7ai.usemoralis.com:2053/server\"\n    >\n        <App />\n    </MoralisProvider>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}